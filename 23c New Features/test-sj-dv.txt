set pages 9999
set lines 200
set tab off
set echo on
 
select /*+ MONITOR */ count(l.lo_custkey)
from lineorder l
where l.lo_partkey IN (select p.p_partkey from part p)
and l.lo_quantity <= 3;

select * from table(dbms_xplan.display_cursor(NULL,NULL));

set echo off
set trimspool on
set trim on
set pages 0
set linesize 1000
set long 1000000
set longchunksize 1000000

PROMPT Deep Vectorization Usage: ;
PROMPT ------------------------- ;
PROMPT ;

SELECT
  '   ' || deepvec.rowsource_id || ' - ' row_source_id,
    CASE
      WHEN deepvec.deepvec_hj IS NOT NULL
      THEN
        'deep vector hash joins used: ' || deepvec.deepvec_hj || 
        ', deep vector hash join flags: ' || deepvec.deepvec_hj_flags
      ELSE
        'deep vector HJ was NOT leveraged'
    END deep_vector_hash_join_usage_info
FROM
  (SELECT EXTRACT(DBMS_SQL_MONITOR.REPORT_SQL_MONITOR_XML,
    q'#//operation[@name='HASH JOIN' and @parent_id]#') xmldata
   FROM   DUAL) hj_operation_data,
  XMLTABLE('/operation'
    PASSING hj_operation_data.xmldata
    COLUMNS
     "ROWSOURCE_ID"        VARCHAR2(5) PATH '@id',
     "DEEPVEC_HJ"          VARCHAR2(5) PATH 'rwsstats/stat[@id="11"]',
     "DEEPVEC_HJ_FLAGS"    VARCHAR2(5) PATH 'rwsstats/stat[@id="12"]') deepvec;

set echo on
set numwidth 20
col name format a60;
set pages 9999
select sn.name, ms.value
from v$statname sn, v$mystat ms
where ms.value != 0
  and sn.statistic# = ms.statistic#
  and (
    ( sn.name like 'IM %' )
    or ( sn.name like 'cell%' )
    or ( sn.name like 'HCC %' )
  )
order by name;


SQL> @test-sj-dv.sql
SQL> set pages 9999
SQL> set lines 200
SQL> set tab off
SQL> set echo on
SQL>
SQL> select /*+ MONITOR */ count(l.lo_custkey)
  2  from lineorder l
  3  where l.lo_partkey IN (select p.p_partkey from part p)
  4  and l.lo_quantity <= 3;

 COUNT(L.LO_CUSTKEY)
--------------------
             1640148

SQL>
SQL> select * from table(dbms_xplan.display_cursor(NULL,NULL));

PLAN_TABLE_OUTPUT
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
SQL_ID  2392z5krrnszf, child number 0
-------------------------------------
select /*+ MONITOR */ count(l.lo_custkey) from lineorder l where
l.lo_partkey IN (select p.p_partkey from part p) and l.lo_quantity <= 3

Plan hash value: 3734209723

-------------------------------------------------------------------------------------------------------------------
| Id  | Operation                     | Name      | Rows  | Bytes |TempSpc| Cost (%CPU)| Time     | Pstart| Pstop |
-------------------------------------------------------------------------------------------------------------------
|   0 | SELECT STATEMENT              |           |       |       |       |  5113 (100)|          |       |       |
|   1 |  SORT AGGREGATE               |           |     1 |    18 |       |            |          |       |       |
|*  2 |   HASH JOIN RIGHT SEMI        |           |  1640K|    28M|    12M|  5113   (8)| 00:00:01 |       |       |
|   3 |    TABLE ACCESS INMEMORY FULL | PART      |   800K|  3906K|       |    73   (3)| 00:00:01 |       |       |
|   4 |    PARTITION RANGE ALL        |           |  1640K|    20M|       |  2448  (15)| 00:00:01 |     1 |     3 |
|*  5 |     TABLE ACCESS INMEMORY FULL| LINEORDER |  1640K|    20M|       |  2448  (15)| 00:00:01 |     1 |     3 |
-------------------------------------------------------------------------------------------------------------------

Predicate Information (identified by operation id):
---------------------------------------------------

   2 - access("L"."LO_PARTKEY"="P"."P_PARTKEY")
   5 - inmemory("L"."LO_QUANTITY"<=3)
       filter("L"."LO_QUANTITY"<=3)


25 rows selected.

SQL>
SQL> set echo off
Deep Vectorization Usage:
-------------------------

   2 -      deep vector hash joins used: 1, deep vector hash join flags: 24576

SQL> set numwidth 20
SQL> col name format a60;
SQL> set pages 9999
SQL> select sn.name, ms.value
  2  from v$statname sn, v$mystat ms
  3  where ms.value != 0
  4    and sn.statistic# = ms.statistic#
  5    and (
  6      ( sn.name like 'IM %' )
  7      or ( sn.name like 'cell%' )
  8      or ( sn.name like 'HCC %' )
  9    )
 10  order by name;

NAME                                                                        VALUE
------------------------------------------------------------ --------------------
IM scan CUs columns accessed                                                 2304
IM scan CUs memcompress for capacity high                                     357
IM scan CUs memcompress for query low                                          16
IM scan CUs pcode aggregation pushdown                                        102
IM scan rows                                                            195604059
IM scan rows pcode aggregated                                             3280296
IM scan rows projected                                                   55819526
IM scan rows valid                                                      112071282
IM scan segments minmax eligible                                              206
cell physical IO interconnect bytes                                      21258240

10 rows selected.

SQL>
